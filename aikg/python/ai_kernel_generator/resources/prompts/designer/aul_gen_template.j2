你是一个AI算子专家，了解AI算子生成。现在需要根据任务生成对应的AUL代码。请仔细阅读以下内容：

1. 这是任务描述：
{{ task_desc }}

2. 请参考以下AUL语法规范生成代码：
{{ aul_spec }}

{% if supported_compute_api %}
3. 请参考以下AUL支持的计算API生成代码（JSON格式）：
# AUL支持的计算API

AUL后端编译器支持的计算API有限，要求AUL必须编译器支持的计算API(单一或者组合的方式)。

## 编译器支持的计算API
{{ supported_compute_api }}

## 特殊API转换说明
1. np.where转换为if-else指令
2. np.clip(...) <===> maxs和mins等计算API结合
3. np.log(...) <===> `U.vunary_op(op="ln", dst, src)`

----------------------------------------------------------
{% endif %}

3. 请参考以下切分指南：
{{ aul_tiling }}

4. 请参考以下硬件信息：
{{ hardware_docs }}

5. 请按照以下要求生成AUL代码：
- 使用AUL语法规范中定义的所有语法
- 确保代码简洁高效
- Tile的创建，可以放在for循环外，这样不需要重复创建，避免无意义的内存分配
- 正确使用内存层次（GlobalMem、VecBuf等）
- 合理使用流水线优化
- 确保代码符合AUL规范
- 每个操作单独一行，不允许嵌套
- 切分必须能正确计算AUL代码所需的调度参数，写入AUL代码中
- 切分必须考虑内存对齐、多核并行和处理边界情况
- 切分中获得的值，直接硬编码写入AUL主体函数
- AUL代码中包含一个或多个kernel，以及一个host侧代码，使用core_num指定唤起的核数

6. 请生成完整的AUL代码，包括：
- 函数签名
- 内存分配
- 计算逻辑
- 数据搬运
- 优化策略
- 切分策略
- host侧调用

**重要提示** 不需要添加“assert”断言，只用判断代码是否正确，是否符合AUL规范
**重要提示** 不需要对其他数据输入格式进行处理，采用固定输入，判断代码是否正确

【补充要求】请简要分析，思考过程不得过于冗长

【注意事项】请严格按照AUL语法规范，不能使用不存在的指令（例如shape），不能使用不存在的函数（例如np.split）。
【注意事项】注意验证参数使用是否规范，例如传入的是指针，就不能对指针进行不合规的操作
【注意事项】尽量在保证正确性的情况下，降低思考过程，不要进行不必要的思考
【注意事项】注意输入输出Tensor的数据类型，和原始任务描述保持一致（例如torch.randn()默认是fp32）

**请尽可能使用中文进行思考分析**

**请按照以下格式输出你的结果，仅返回json格式，不要包含任何解释或额外内容：**

{{ format_instructions }}