{% if sketch_guide %}
{{ sketch_guide }}
{% endif %}

## 当前任务信息

### 任务描述
{{ task_desc }}

{% if hardware_docs %}
### {{ arch_name }} 硬件信息
{{ hardware_docs }}
{% endif %}

{% if dsl_basic_docs %}
### {{dsl}} 相关信息（仅供参考，生成的草图应保持DSL无关性）
{{ dsl_basic_docs }}
{% endif %}

{% if inspirations %}
### 进化探索方案
**重要须知**：下面是一些过往经验生成的草图，以及对应草图生成的代码的性能指标，请参考这些信息，分析可用的优化方案，并生成对应的优化后的草图
{{ inspirations }}
请参考上述从进化探索方案中检索到的相关方案草图以及性能指标，分析可用的优化方案，并生成对应的优化后的草图
一般而言，调整切分方式、修改计算逻辑、调整计算顺序、调整计算精度等，都是可行的优化方案

{% if meta_prompts %}
### 优化要点
请在设计草图中重点考虑以下优化建议：
{{ meta_prompts }}
**重要提醒**：请严格按照优化建议，基于进化探索方案中的inspirations进行修改
{% endif %}

请你尽最大努力来完成草图的优化，得到一个计算速度快的高效算子草图
**请注意**：在优化后的草图的最后，请添加一个注释，说明优化的内容，并着重标注【待优化项】，以便后续的代码生成阶段进行优化
{% endif %}

## 生成指令

请严格按照上述指南，为当前任务生成完整的算子设计草图。

**重要提醒**：
1. 使用自然语言描述，不要使用任何特定DSL的语法或术语
2. 确保草图具有跨DSL通用性，可指导生成任意目标语言的代码
3. 提供足够的实现细节，但保持抽象层次
4. 重点强调并行策略、内存优化和性能优化要点
5. **内存约束考虑**：设计tile大小和流水线深度时必须考虑硬件内存限制，避免共享内存溢出

**请按照以下格式输出你的结果，仅返回json格式，不要包含任何解释或额外内容：**

{{ format_instructions }}